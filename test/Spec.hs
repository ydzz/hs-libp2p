import Libp2p.Core.Crypto.RSA
import Libp2p.Core.Crypto.Key
import Numeric (showHex)
import qualified Data.ByteString as B
import qualified System.IO as I
main :: IO ()
main = do
 putStrLn "\r\n========================"
 (pub,prv) <- generateRSAKeyPair 64
 print $ bytes pub
 print $ raw pub
 print $ typ pub

 print $ bytes prv
 --B.writeFile "fff.txt" $  raw pub
 --B.writeFile "ppp.txt" privareBS



{-

pN::Integer
pN = 9539842081174255871466990106524269442826697681552037238467331932977137065371865834043219892102089357661106245490218817523177153503724063796934425007050521

d = 3896754085677324712439863361942943573622086713385538503040579761749820090025475909392656880153804138231283413195717524362631695026137970691842913509790473
p = 101732542866484830597614910440649518318755687390601020500488368560652039408931
q = 93773750388747030929105198793311675757387418386724432121439259852703759903891
dp = 98073791267597106934362421863073326020095279450358919010953432803790162043673
dQ = 89572768788408881749132773084823904269164132908545343473674704457621009105443
qinv = 48019368095230028020649151593702171443677147195415887626298240560880232186249

testPrivateKey::RSAPrivateKey
testPrivateKey = R.PrivateKey (R.PublicKey 64 pN 0x10001) d p q dp dQ qinv

privareBS = rawPrivate testPrivateKey

-}